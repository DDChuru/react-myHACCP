import { MD3LightTheme, MD3DarkTheme, configureFonts } from 'react-native-paper';

const fontConfig = {
  displayLarge: {
    fontFamily: 'SpaceMono',
    fontSize: 57,
    fontWeight: '400',
    letterSpacing: 0,
    lineHeight: 64,
  },
  displayMedium: {
    fontFamily: 'SpaceMono',
    fontSize: 45,
    fontWeight: '400',
    letterSpacing: 0,
    lineHeight: 52,
  },
  displaySmall: {
    fontFamily: 'SpaceMono',
    fontSize: 36,
    fontWeight: '400',
    letterSpacing: 0,
    lineHeight: 44,
  },
  headlineLarge: {
    fontFamily: 'SpaceMono',
    fontSize: 32,
    fontWeight: '400',
    letterSpacing: 0,
    lineHeight: 40,
  },
  headlineMedium: {
    fontFamily: 'SpaceMono',
    fontSize: 28,
    fontWeight: '400',
    letterSpacing: 0,
    lineHeight: 36,
  },
  headlineSmall: {
    fontFamily: 'SpaceMono',
    fontSize: 24,
    fontWeight: '400',
    letterSpacing: 0,
    lineHeight: 32,
  },
  titleLarge: {
    fontFamily: 'SpaceMono',
    fontSize: 22,
    fontWeight: '400',
    letterSpacing: 0,
    lineHeight: 28,
  },
  titleMedium: {
    fontFamily: 'SpaceMono',
    fontSize: 16,
    fontWeight: '500',
    letterSpacing: 0.15,
    lineHeight: 24,
  },
  titleSmall: {
    fontFamily: 'SpaceMono',
    fontSize: 14,
    fontWeight: '500',
    letterSpacing: 0.1,
    lineHeight: 20,
  },
  bodyLarge: {
    fontFamily: 'SpaceMono',
    fontSize: 16,
    fontWeight: '400',
    letterSpacing: 0.5,
    lineHeight: 24,
  },
  bodyMedium: {
    fontFamily: 'SpaceMono',
    fontSize: 14,
    fontWeight: '400',
    letterSpacing: 0.25,
    lineHeight: 20,
  },
  bodySmall: {
    fontFamily: 'SpaceMono',
    fontSize: 12,
    fontWeight: '400',
    letterSpacing: 0.4,
    lineHeight: 16,
  },
  labelLarge: {
    fontFamily: 'SpaceMono',
    fontSize: 14,
    fontWeight: '500',
    letterSpacing: 0.1,
    lineHeight: 20,
  },
  labelMedium: {
    fontFamily: 'SpaceMono',
    fontSize: 12,
    fontWeight: '500',
    letterSpacing: 0.5,
    lineHeight: 16,
  },
  labelSmall: {
    fontFamily: 'SpaceMono',
    fontSize: 11,
    fontWeight: '500',
    letterSpacing: 0.5,
    lineHeight: 16,
  },
};

// HACCP-themed colors
const colors = {
  primary: '#667eea',
  primaryContainer: '#e0e7ff',
  secondary: '#764ba2',
  secondaryContainer: '#f3e7fc',
  tertiary: '#06b6d4',
  tertiaryContainer: '#cffafe',
  surface: '#ffffff',
  surfaceVariant: '#f8f9fa',
  surfaceDisabled: '#e9ecef',
  background: '#fafbfc',
  error: '#dc2626',
  errorContainer: '#fee2e2',
  warning: '#f59e0b',
  warningContainer: '#fef3c7',
  success: '#10b981',
  successContainer: '#d1fae5',
  info: '#3b82f6',
  infoContainer: '#dbeafe',
  onPrimary: '#ffffff',
  onPrimaryContainer: '#1e293b',
  onSecondary: '#ffffff',
  onSecondaryContainer: '#1e293b',
  onTertiary: '#ffffff',
  onTertiaryContainer: '#1e293b',
  onSurface: '#1e293b',
  onSurfaceVariant: '#64748b',
  onSurfaceDisabled: '#94a3b8',
  onError: '#ffffff',
  onErrorContainer: '#991b1b',
  onBackground: '#1e293b',
  outline: '#cbd5e1',
  outlineVariant: '#e2e8f0',
  inverseSurface: '#1e293b',
  inverseOnSurface: '#f8fafc',
  inversePrimary: '#a5b4fc',
  shadow: '#000000',
  scrim: '#000000',
  backdrop: 'rgba(0, 0, 0, 0.4)',
  elevation: {
    level0: 'transparent',
    level1: '#ffffff',
    level2: '#f8f9fa',
    level3: '#f1f5f9',
    level4: '#e2e8f0',
    level5: '#cbd5e1',
  },
};

export const lightTheme = {
  ...MD3LightTheme,
  colors: {
    ...MD3LightTheme.colors,
    ...colors,
  },
  fonts: configureFonts({ config: fontConfig }),
  roundness: 12,
};

export const darkTheme = {
  ...MD3DarkTheme,
  colors: {
    ...MD3DarkTheme.colors,
    primary: '#818cf8',
    primaryContainer: '#4c1d95',
    secondary: '#a78bfa',
    secondaryContainer: '#5b21b6',
    tertiary: '#22d3ee',
    tertiaryContainer: '#0e7490',
    surface: '#1e293b',
    surfaceVariant: '#334155',
    surfaceDisabled: '#475569',
    background: '#0f172a',
    error: '#f87171',
    errorContainer: '#7f1d1d',
    warning: '#fbbf24',
    warningContainer: '#78350f',
    success: '#34d399',
    successContainer: '#064e3b',
    info: '#60a5fa',
    infoContainer: '#1e3a8a',
    onPrimary: '#1e293b',
    onPrimaryContainer: '#e0e7ff',
    onSecondary: '#1e293b',
    onSecondaryContainer: '#ede9fe',
    onTertiary: '#1e293b',
    onTertiaryContainer: '#cffafe',
    onSurface: '#f8fafc',
    onSurfaceVariant: '#cbd5e1',
    onSurfaceDisabled: '#94a3b8',
    onError: '#1e293b',
    onErrorContainer: '#fecaca',
    onBackground: '#f8fafc',
    outline: '#475569',
    outlineVariant: '#334155',
    inverseSurface: '#f8fafc',
    inverseOnSurface: '#1e293b',
    inversePrimary: '#667eea',
    shadow: '#000000',
    scrim: '#000000',
    backdrop: 'rgba(0, 0, 0, 0.6)',
    elevation: {
      level0: 'transparent',
      level1: '#1e293b',
      level2: '#334155',
      level3: '#475569',
      level4: '#64748b',
      level5: '#94a3b8',
    },
  },
  fonts: configureFonts({ config: fontConfig }),
  roundness: 12,
};

// HACCP-specific component styles
export const haccpStyles = {
  // Critical Control Point indicators
  ccp: {
    critical: '#dc2626',
    warning: '#f59e0b',
    safe: '#10b981',
    info: '#3b82f6',
  },
  // Temperature ranges
  temperature: {
    danger: '#dc2626',
    caution: '#f59e0b',
    safe: '#10b981',
    frozen: '#06b6d4',
  },
  // Audit status
  audit: {
    pending: '#6b7280',
    inProgress: '#3b82f6',
    completed: '#10b981',
    failed: '#dc2626',
    requiresAction: '#f59e0b',
  },
  // Non-conformance levels
  nonConformance: {
    critical: '#dc2626',
    major: '#f59e0b',
    minor: '#fbbf24',
    observation: '#3b82f6',
  },
};